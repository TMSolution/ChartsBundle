<div id="{{options.htmlContainerId}}" class="bgm-white"></div>

<script>

  
    
    var {{options.htmlContainerId}}Fn=function(){
        
        Morris.Area({
        element: '{{options.htmlContainerId}}',
                data:{{options.jsonData|raw}},
                xkey: '{{options.xkey}}',
                ykeys: [{% for ykey in options.ykeys %}'{{ykey}}'{% if not loop.last %},{% endif %}{% endfor %} ],
                labels: [{% for label in options.labels %}'{{label}}'{% if not loop.last %},{% endif %}{% endfor %} ],
                xLabels:'text',
                resize: true,
                {% if options.xLabelFormatFn is defined %}xLabelFormat:{{options.xLabelFormatFn|raw}},{% endif %}
                {% if options.yLabelFormatFn is defined %}yLabelFormat:{{options.yLabelFormatFn|raw}},{% endif %}
                parseTime: false,
                behaveLikeLine:true,
                goalStrokeWidth: '0px',
                {% if options.lineWidth is defined %}lineWidth:{{options.lineWidth|raw}},{% endif %}
                {% if options.pointSize is defined %}pointSize:{{options.pointSize|raw}},{% endif %}
                {% if options.grid is defined %}grid:{{options.grid|raw}},{% endif %}
                axis: false
                {% if options.hideHover %}, hideHover:'{{options.hideHover}}'{% endif %}
                {% if options.hoverCallback %}, hoverCallback:{{options.hoverCallback|raw}}{% endif %}
                {% if options.fillOpacity %}, fillOpacity:{{options.fillOpacity}}{% endif %}
                {% if options.lineColors is not empty %}, lineColors: [{% for lineColor in options.lineColors %}'{{lineColor}}'{% if not loop.last %},{% endif %}{% endfor %} ]{% endif %}
        });
        
{% if options.download %}
            {%if not options.downloadButtonId %}
                $('#{{options.htmlContainerId}}').append('<div><a style="cursor:pointer" class="not-lazy-loaded pull-right" target="_blank" id="{{options.htmlContainerId}}-download">{{'system.chart.download'|trans}}</a></div>');
            {%endif%}       
                document.getElementById('{%if options.downloadButtonId %}{{options.downloadButtonId}}{%else%}{{options.htmlContainerId}}-download{%endif%}').addEventListener('click', function() {
        downloadImage(this, '{{options.htmlContainerId}}', {%if options.downloadFileName %}'{{options.downloadFileName|trans}}.png'{% else %}'export.png'{% endif %});
        }, false);
{% endif %}

{% if options.legend  and options.labels %}
    {% set legend ='<div class="legend-container" style="position:relative;">'%}
    {% for label in options.labels %} 
        {% set legend=legend~'<div style="background-color: '~options.lineColors[loop.index0]~'" class="di-block m-r-10 legend-color"></div><div class="di-block m-r-20 legend-title">'~label|trans~'</div>'%}
    {% endfor %}
    {% set legend=legend~'</div>'%}    
    $('#{{options.htmlContainerId}}').append('{{legend|raw}}');
{% endif %}
    
        //event example
        //chart{{options.htmlContainerId}}.on('click', function(i, row){console.log(i, row);});
    }
    
    {% if options.data is not empty %}
    {% if app.request.isXmlHttpRequest() %}

        setTimeout({{options.htmlContainerId}}Fn, 1000);

    {% else %}
    if (collector) {
        collector.addFunction({{options.htmlContainerId}}Fn);
    }
    {% endif %}
    {% endif %}
   

</script>